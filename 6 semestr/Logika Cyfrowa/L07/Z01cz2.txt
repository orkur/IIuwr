// D latch (gate model)
module d_latch(
  input d, e,
  output q, nq
);

  logic s, r, nd;

  nor g1(q, r, nq);
  nor g2(nq, s, q);
  and g3(r, e, nd);
  and g4(s, e, d);
  not g5(nd, d);

endmodule

// master-slave D flip-flop
module dff(
  input clk, d,
  output o, no
);

  logic q, nq1, nq2, nclk;

  d_latch dl1(d, clk, q, nq1);
  d_latch dl2(q, nclk, o, no);
  not g(nclk, clk);

endmodule
module T(
  input t, clk, act,
  output q, nq);
  logic nt, a1, a2, o;
  not nott(nt, t);
  and and1(a1, q, nt);
  and and2(a2, nq, t);
  or or1(o, a2, a1, act);
  dff d(clk, o, q, nq);
endmodule
module mltp(
  input a, b, w,
  output logic o);
	always_comb
      o = w ? b : a;
endmodule

module licznik(
  input en, clk, act, load,
  input [2:0] d,
  output [2:0]q);
  	logic a1, a2, nq0, nq1, nq2;
  	logic m0, m1, m2;
  	logic en1, en2, en3;

  mltp mltp1(en, d[0]^q[0], load, en1);
  T t1(en1, clk, act, q[0], nq0);
    and and1(a1, en, q[0]);
  mltp mltp2(a1, d[1]^q[1], load, en2);
  T t2(en2, clk, act, q[1], nq1);
    and and2(a2, a1, q[1]);
  mltp mltp3(a2, d[2]^q[2], load, en3);
  T t3(en3, clk, act, q[2], nq2);


endmodule


