
zad1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b8  00800100  00000300  00000374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000300  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000a80  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ce0  00000000  00000000  00000fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001c8c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ca0  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00001ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  000022d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  00002876  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00002890  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0d 01       	movw	r0, r26
  6a:	f9 00       	.word	0x00f9	; ????
  6c:	e5 00       	.word	0x00e5	; ????
  6e:	d1 00       	.word	0x00d1	; ????
  70:	bd 00       	.word	0x00bd	; ????
  72:	a9 00       	.word	0x00a9	; ????
  74:	95 00       	.word	0x0095	; ????
  76:	81 00       	.word	0x0081	; ????
  78:	6d 00       	.word	0x006d	; ????
  7a:	21 01       	movw	r4, r2

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	12 e0       	ldi	r17, 0x02	; 2
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e0 e0       	ldi	r30, 0x00	; 0
  90:	f3 e0       	ldi	r31, 0x03	; 3
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a8 3b       	cpi	r26, 0xB8	; 184
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>
  9e:	0e 94 36 01 	call	0x26c	; 0x26c <main>
  a2:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <useTONE>:
#define D5_note 8
#define pause 10

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
  aa:	0b c0       	rjmp	.+22     	; 0xc2 <useTONE+0x18>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	ff ef       	ldi	r31, 0xFF	; 255
  ae:	29 ec       	ldi	r18, 0xC9	; 201
  b0:	38 e0       	ldi	r19, 0x08	; 8
  b2:	f1 50       	subi	r31, 0x01	; 1
  b4:	20 40       	sbci	r18, 0x00	; 0
  b6:	30 40       	sbci	r19, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <useTONE+0x8>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <useTONE+0x12>
  bc:	00 00       	nop
  be:	61 50       	subi	r22, 0x01	; 1
  c0:	71 09       	sbc	r23, r1
  c2:	61 15       	cp	r22, r1
  c4:	71 05       	cpc	r23, r1
  c6:	09 f4       	brne	.+2      	; 0xca <useTONE+0x20>
  c8:	d0 c0       	rjmp	.+416    	; 0x26a <useTONE+0x1c0>
    {
        switch (wavelength)
  ca:	8a 30       	cpi	r24, 0x0A	; 10
  cc:	91 05       	cpc	r25, r1
  ce:	70 f7       	brcc	.-36     	; 0xac <useTONE+0x2>
  d0:	fc 01       	movw	r30, r24
  d2:	ec 5c       	subi	r30, 0xCC	; 204
  d4:	ff 4f       	sbci	r31, 0xFF	; 255
  d6:	0c 94 78 01 	jmp	0x2f0	; 0x2f0 <__tablejump2__>
  da:	24 eb       	ldi	r18, 0xB4	; 180
  dc:	30 e0       	ldi	r19, 0x00	; 0
                break;  
            case 7:
                TONE(C5, dlugosc);
                break;
            case 8:
                TONE(D5, dlugosc);
  de:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	e7 ec       	ldi	r30, 0xC7	; 199
  e2:	f7 e0       	ldi	r31, 0x07	; 7
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <useTONE+0x3a>
  e8:	00 c0       	rjmp	.+0      	; 0xea <useTONE+0x40>
  ea:	00 00       	nop
  ec:	2d 98       	cbi	0x05, 5	; 5
  ee:	e7 ec       	ldi	r30, 0xC7	; 199
  f0:	f7 e0       	ldi	r31, 0x07	; 7
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <useTONE+0x48>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <useTONE+0x4e>
  f8:	00 00       	nop
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	31 09       	sbc	r19, r1
  fe:	79 f7       	brne	.-34     	; 0xde <useTONE+0x34>
 100:	de cf       	rjmp	.-68     	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 102:	2a ea       	ldi	r18, 0xAA	; 170
 104:	30 e0       	ldi	r19, 0x00	; 0
                break;  
            case 6:
                TONE(B4, dlugosc);
                break;  
            case 7:
                TONE(C5, dlugosc);
 106:	2d 9a       	sbi	0x05, 5	; 5
 108:	eb e3       	ldi	r30, 0x3B	; 59
 10a:	f8 e0       	ldi	r31, 0x08	; 8
 10c:	31 97       	sbiw	r30, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <useTONE+0x62>
 110:	00 c0       	rjmp	.+0      	; 0x112 <useTONE+0x68>
 112:	00 00       	nop
 114:	2d 98       	cbi	0x05, 5	; 5
 116:	eb e3       	ldi	r30, 0x3B	; 59
 118:	f8 e0       	ldi	r31, 0x08	; 8
 11a:	31 97       	sbiw	r30, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <useTONE+0x70>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <useTONE+0x76>
 120:	00 00       	nop
 122:	21 50       	subi	r18, 0x01	; 1
 124:	31 09       	sbc	r19, r1
 126:	79 f7       	brne	.-34     	; 0x106 <useTONE+0x5c>
 128:	ca cf       	rjmp	.-108    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 12a:	21 ea       	ldi	r18, 0xA1	; 161
 12c:	30 e0       	ldi	r19, 0x00	; 0
                break;  
            case 5:
                TONE(A4, dlugosc);
                break;  
            case 6:
                TONE(B4, dlugosc);
 12e:	2d 9a       	sbi	0x05, 5	; 5
 130:	eb eb       	ldi	r30, 0xBB	; 187
 132:	f8 e0       	ldi	r31, 0x08	; 8
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <useTONE+0x8a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <useTONE+0x90>
 13a:	00 00       	nop
 13c:	2d 98       	cbi	0x05, 5	; 5
 13e:	eb eb       	ldi	r30, 0xBB	; 187
 140:	f8 e0       	ldi	r31, 0x08	; 8
 142:	31 97       	sbiw	r30, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <useTONE+0x98>
 146:	00 c0       	rjmp	.+0      	; 0x148 <useTONE+0x9e>
 148:	00 00       	nop
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	31 09       	sbc	r19, r1
 14e:	79 f7       	brne	.-34     	; 0x12e <useTONE+0x84>
 150:	b6 cf       	rjmp	.-148    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 152:	2f e8       	ldi	r18, 0x8F	; 143
 154:	30 e0       	ldi	r19, 0x00	; 0
                break; 
            case 4:
                TONE(G4, dlugosc);
                break;  
            case 5:
                TONE(A4, dlugosc);
 156:	2d 9a       	sbi	0x05, 5	; 5
 158:	eb ec       	ldi	r30, 0xCB	; 203
 15a:	f9 e0       	ldi	r31, 0x09	; 9
 15c:	31 97       	sbiw	r30, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <useTONE+0xb2>
 160:	00 c0       	rjmp	.+0      	; 0x162 <useTONE+0xb8>
 162:	00 00       	nop
 164:	2d 98       	cbi	0x05, 5	; 5
 166:	eb ec       	ldi	r30, 0xCB	; 203
 168:	f9 e0       	ldi	r31, 0x09	; 9
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <useTONE+0xc0>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <useTONE+0xc6>
 170:	00 00       	nop
 172:	21 50       	subi	r18, 0x01	; 1
 174:	31 09       	sbc	r19, r1
 176:	79 f7       	brne	.-34     	; 0x156 <useTONE+0xac>
 178:	a2 cf       	rjmp	.-188    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 17a:	2f e7       	ldi	r18, 0x7F	; 127
 17c:	30 e0       	ldi	r19, 0x00	; 0
                break;
            case 3:
                TONE(F4, dlugosc);
                break; 
            case 4:
                TONE(G4, dlugosc);
 17e:	2d 9a       	sbi	0x05, 5	; 5
 180:	ef ef       	ldi	r30, 0xFF	; 255
 182:	fa e0       	ldi	r31, 0x0A	; 10
 184:	31 97       	sbiw	r30, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <useTONE+0xda>
 188:	00 c0       	rjmp	.+0      	; 0x18a <useTONE+0xe0>
 18a:	00 00       	nop
 18c:	2d 98       	cbi	0x05, 5	; 5
 18e:	ef ef       	ldi	r30, 0xFF	; 255
 190:	fa e0       	ldi	r31, 0x0A	; 10
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <useTONE+0xe8>
 196:	00 c0       	rjmp	.+0      	; 0x198 <useTONE+0xee>
 198:	00 00       	nop
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	31 09       	sbc	r19, r1
 19e:	79 f7       	brne	.-34     	; 0x17e <useTONE+0xd4>
 1a0:	8e cf       	rjmp	.-228    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 1a2:	21 e7       	ldi	r18, 0x71	; 113
 1a4:	30 e0       	ldi	r19, 0x00	; 0
                break;
            case 2:
                TONE(E4, dlugosc);
                break;
            case 3:
                TONE(F4, dlugosc);
 1a6:	2d 9a       	sbi	0x05, 5	; 5
 1a8:	e7 e5       	ldi	r30, 0x57	; 87
 1aa:	fc e0       	ldi	r31, 0x0C	; 12
 1ac:	31 97       	sbiw	r30, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <useTONE+0x102>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <useTONE+0x108>
 1b2:	00 00       	nop
 1b4:	2d 98       	cbi	0x05, 5	; 5
 1b6:	e7 e5       	ldi	r30, 0x57	; 87
 1b8:	fc e0       	ldi	r31, 0x0C	; 12
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <useTONE+0x110>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <useTONE+0x116>
 1c0:	00 00       	nop
 1c2:	21 50       	subi	r18, 0x01	; 1
 1c4:	31 09       	sbc	r19, r1
 1c6:	79 f7       	brne	.-34     	; 0x1a6 <useTONE+0xfc>
 1c8:	7a cf       	rjmp	.-268    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 1ca:	2b e6       	ldi	r18, 0x6B	; 107
 1cc:	30 e0       	ldi	r19, 0x00	; 0
                break;
            case 1:
                TONE(D4, dlugosc);
                break;
            case 2:
                TONE(E4, dlugosc);
 1ce:	2d 9a       	sbi	0x05, 5	; 5
 1d0:	e3 e1       	ldi	r30, 0x13	; 19
 1d2:	fd e0       	ldi	r31, 0x0D	; 13
 1d4:	31 97       	sbiw	r30, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <useTONE+0x12a>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <useTONE+0x130>
 1da:	00 00       	nop
 1dc:	2d 98       	cbi	0x05, 5	; 5
 1de:	e3 e1       	ldi	r30, 0x13	; 19
 1e0:	fd e0       	ldi	r31, 0x0D	; 13
 1e2:	31 97       	sbiw	r30, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <useTONE+0x138>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <useTONE+0x13e>
 1e8:	00 00       	nop
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	31 09       	sbc	r19, r1
 1ee:	79 f7       	brne	.-34     	; 0x1ce <useTONE+0x124>
 1f0:	66 cf       	rjmp	.-308    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 1f2:	2f e5       	ldi	r18, 0x5F	; 95
 1f4:	30 e0       	ldi	r19, 0x00	; 0
        {
            case 0:
                TONE(C4, dlugosc);
                break;
            case 1:
                TONE(D4, dlugosc);
 1f6:	2d 9a       	sbi	0x05, 5	; 5
 1f8:	ef ea       	ldi	r30, 0xAF	; 175
 1fa:	fe e0       	ldi	r31, 0x0E	; 14
 1fc:	31 97       	sbiw	r30, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <useTONE+0x152>
 200:	00 c0       	rjmp	.+0      	; 0x202 <useTONE+0x158>
 202:	00 00       	nop
 204:	2d 98       	cbi	0x05, 5	; 5
 206:	ef ea       	ldi	r30, 0xAF	; 175
 208:	fe e0       	ldi	r31, 0x0E	; 14
 20a:	31 97       	sbiw	r30, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <useTONE+0x160>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <useTONE+0x166>
 210:	00 00       	nop
 212:	21 50       	subi	r18, 0x01	; 1
 214:	31 09       	sbc	r19, r1
 216:	79 f7       	brne	.-34     	; 0x1f6 <useTONE+0x14c>
 218:	52 cf       	rjmp	.-348    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 21a:	25 e5       	ldi	r18, 0x55	; 85
 21c:	30 e0       	ldi	r19, 0x00	; 0
        {
            case 0:
                TONE(C4, dlugosc);
 21e:	2d 9a       	sbi	0x05, 5	; 5
 220:	eb e7       	ldi	r30, 0x7B	; 123
 222:	f0 e1       	ldi	r31, 0x10	; 16
 224:	31 97       	sbiw	r30, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <useTONE+0x17a>
 228:	00 c0       	rjmp	.+0      	; 0x22a <useTONE+0x180>
 22a:	00 00       	nop
 22c:	2d 98       	cbi	0x05, 5	; 5
 22e:	eb e7       	ldi	r30, 0x7B	; 123
 230:	f0 e1       	ldi	r31, 0x10	; 16
 232:	31 97       	sbiw	r30, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <useTONE+0x188>
 236:	00 c0       	rjmp	.+0      	; 0x238 <useTONE+0x18e>
 238:	00 00       	nop
 23a:	21 50       	subi	r18, 0x01	; 1
 23c:	31 09       	sbc	r19, r1
 23e:	79 f7       	brne	.-34     	; 0x21e <useTONE+0x174>
 240:	3e cf       	rjmp	.-388    	; 0xbe <useTONE+0x14>

void useTONE(uint16_t wavelength, uint16_t ile)
{
    while(ile--)
    {
        switch (wavelength)
 242:	20 e5       	ldi	r18, 0x50	; 80
 244:	30 e0       	ldi	r19, 0x00	; 0
                break;
            case 8:
                TONE(D5, dlugosc);
                break;
            case 9:
                TONE(B3, dlugosc);
 246:	2d 9a       	sbi	0x05, 5	; 5
 248:	e7 e7       	ldi	r30, 0x77	; 119
 24a:	f1 e1       	ldi	r31, 0x11	; 17
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <useTONE+0x1a2>
 250:	00 c0       	rjmp	.+0      	; 0x252 <useTONE+0x1a8>
 252:	00 00       	nop
 254:	2d 98       	cbi	0x05, 5	; 5
 256:	e7 e7       	ldi	r30, 0x77	; 119
 258:	f1 e1       	ldi	r31, 0x11	; 17
 25a:	31 97       	sbiw	r30, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <useTONE+0x1b0>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <useTONE+0x1b6>
 260:	00 00       	nop
 262:	21 50       	subi	r18, 0x01	; 1
 264:	31 09       	sbc	r19, r1
 266:	79 f7       	brne	.-34     	; 0x246 <useTONE+0x19c>
 268:	2a cf       	rjmp	.-428    	; 0xbe <useTONE+0x14>
                break;
            default:                
                _delay_ms(dlugosc);      
        }
    }
}
 26a:	08 95       	ret

0000026c <main>:

int main() {
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	cd b7       	in	r28, 0x3d	; 61
 272:	de b7       	in	r29, 0x3e	; 62
 274:	c8 5b       	subi	r28, 0xB8	; 184
 276:	d1 40       	sbci	r29, 0x01	; 1
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
  BUZZ_DDR |= _BV(BUZZ);
 282:	25 9a       	sbi	0x04, 5	; 4
  //breezeblocks
  const uint16_t utwor[73*3 + 1] ={
 284:	88 eb       	ldi	r24, 0xB8	; 184
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	e0 e0       	ldi	r30, 0x00	; 0
 28a:	f1 e0       	ldi	r31, 0x01	; 1
 28c:	de 01       	movw	r26, r28
 28e:	11 96       	adiw	r26, 0x01	; 1
 290:	01 90       	ld	r0, Z+
 292:	0d 92       	st	X+, r0
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	e1 f7       	brne	.-8      	; 0x290 <main+0x24>
 298:	ce 01       	movw	r24, r28
 29a:	87 54       	subi	r24, 0x47	; 71
 29c:	9e 4f       	sbci	r25, 0xFE	; 254
 29e:	6c 01       	movw	r12, r24

F4_note + osemka, G4_note + szesnastka, F4_note + szesnastka, pause + szesnastka
};
  while (1) {
        for(int i = 0; i < 73*3 + 1; i++)
            useTONE(utwor[i]%16, _BV(utwor[i]>>4));
 2a0:	ee 24       	eor	r14, r14
 2a2:	e3 94       	inc	r14
 2a4:	f1 2c       	mov	r15, r1
 2a6:	8e 01       	movw	r16, r28
 2a8:	0f 5f       	subi	r16, 0xFF	; 255
 2aa:	1f 4f       	sbci	r17, 0xFF	; 255
 2ac:	f8 01       	movw	r30, r16
 2ae:	81 91       	ld	r24, Z+
 2b0:	91 91       	ld	r25, Z+
 2b2:	8f 01       	movw	r16, r30
 2b4:	9c 01       	movw	r18, r24
 2b6:	32 95       	swap	r19
 2b8:	22 95       	swap	r18
 2ba:	2f 70       	andi	r18, 0x0F	; 15
 2bc:	23 27       	eor	r18, r19
 2be:	3f 70       	andi	r19, 0x0F	; 15
 2c0:	23 27       	eor	r18, r19
 2c2:	b7 01       	movw	r22, r14
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <main+0x5e>
 2c6:	66 0f       	add	r22, r22
 2c8:	77 1f       	adc	r23, r23
 2ca:	2a 95       	dec	r18
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <main+0x5a>
 2ce:	8f 70       	andi	r24, 0x0F	; 15
 2d0:	99 27       	eor	r25, r25
 2d2:	0e 94 55 00 	call	0xaa	; 0xaa <useTONE>
A4_note + szesnastka, D5_note + szesnastka, A4_note + szesnastka, G4_note + szesnastka, pause + szesnastka,

F4_note + osemka, G4_note + szesnastka, F4_note + szesnastka, pause + szesnastka
};
  while (1) {
        for(int i = 0; i < 73*3 + 1; i++)
 2d6:	c0 16       	cp	r12, r16
 2d8:	d1 06       	cpc	r13, r17
 2da:	41 f7       	brne	.-48     	; 0x2ac <main+0x40>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2dc:	ff ef       	ldi	r31, 0xFF	; 255
 2de:	23 ed       	ldi	r18, 0xD3	; 211
 2e0:	80 e3       	ldi	r24, 0x30	; 48
 2e2:	f1 50       	subi	r31, 0x01	; 1
 2e4:	20 40       	sbci	r18, 0x00	; 0
 2e6:	80 40       	sbci	r24, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <main+0x76>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <main+0x80>
 2ec:	00 00       	nop
 2ee:	db cf       	rjmp	.-74     	; 0x2a6 <main+0x3a>

000002f0 <__tablejump2__>:
 2f0:	ee 0f       	add	r30, r30
 2f2:	ff 1f       	adc	r31, r31
 2f4:	05 90       	lpm	r0, Z+
 2f6:	f4 91       	lpm	r31, Z
 2f8:	e0 2d       	mov	r30, r0
 2fa:	09 94       	ijmp

000002fc <_exit>:
 2fc:	f8 94       	cli

000002fe <__stop_program>:
 2fe:	ff cf       	rjmp	.-2      	; 0x2fe <__stop_program>
